{"version":3,"sources":["components/MainContainer/index.js","containers/MainPage/constants.js","containers/MainPage/Board/index.js","components/BoardLegend/BoardLegend.js","containers/MainPage/reducer.js","containers/MainPage/selectors.js","HOC/checkStore.js","utils/history.js","reducers.js","HOC/reducerInjectors.js","HOC/useInjectReducer.js","containers/MainPage/StreetSelector/index.js","containers/MainPage/BoardCards/index.js","containers/MainPage/index.js","containers/MainPage/actions.js","reducers/actions.js","containers/App/App.js","serviceWorker.js","localStorage.js","index.js","configureStore.js"],"names":["styled","Container","SET_HAND_RANGE","SET_HAND_RANGE_SELECT","ColorCard","animated","div","props","coloring","StyledRow","Row","StyledCol","Col","orderedCard","displayCardSuit","cardOne","cardTwo","indexOf","getCards","card1","card2","Board","onMouseOverHandler","rangeColors","ranges","mode","useState","manyHands","setManyHands","cards","setCards","useDispatch","useEffect","cardClone","forEach","hands","Object","keys","cardColors","colorCards","bind","useGesture","onDrag","args","length","onMouseDownEvent","memo","down","first","threshold","filterTaps","onMove","delay","setNewManyHands","map","reduce","acc","idx","push","row","columnJSX","xs","key","hand","fluid","Table","Header","initialState","street","streetAction","green","blue","purple","red","Preflop","disabled","Raise4BetCall","color","active","prHandString","colorCard","Raise4BetFold","RaiseCall","RaiseFold","Flop","Valuebet","Bluff","CheckCall","CheckFold","Turn","River","mainPageReducer","state","action","produce","draft","type","console","log","data","name","newRangeColors","value","rangesIndex","splice","colorIndex","selectGlobal","global","makeSelectRanges","createSelector","makeSelectRangeColors","globalState","checkStore","store","shape","dispatch","isFunction","subscribe","getState","replaceReducer","runSaga","injectedReducers","isObject","injectedSagas","invariant","conformsTo","history","createBrowserHistory","createReducer","rootReducer","combineReducers","globalReducer","router","connectRouter","injectReducerFactory","isValid","reducer","isString","isEmpty","Reflect","has","getInjectors","injectReducer","useInjectReducer","context","React","useContext","ReactReduxContext","StyledButton","Button","StreetSelector","handleStreet","onClick","Menu","attached","tabular","Item","Segment","style","display","gridTemplateColumns","cardBack","alt","height","src","BoardCards","cardsFlipped","flippinCards","updateFlippinCards","flippinCardsClone","split","toUpperCase","trim","md","lg","Array","isArray","withConnect","connect","getMapRange","getRangeColors","compose","deadCards","updateDeadCards","stackable","Form","alignItems","justifyContent","Input","label","placeholder","width","onChange","e","target","setHandRangeSelect","setHandRange","localStorage","clear","mapStateToProps","createStructuredSelector","username","useSelector","user","inverted","to","userActions","Boolean","window","location","hostname","match","loadState","serializedState","getItem","JSON","parse","error","composeEnhancers","reduxSagaMonitorOptions","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","enhancers","applyMiddleware","persistedState","createStore","run","configureStore","throttle","stringify","setItem","saveState","ReactDOM","render","theme","main","path","component","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d1bca856.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport Container from \"react-bootstrap/Container\";\n\nconst StyledContainer = styled(Container)`\n  margin-top: 30px;\n  margin-bottom: 50px;\n  width: 1100px;\n`;\n\nconst MainContainer = ({ children }) => {\n  return <StyledContainer>{children}</StyledContainer>;\n};\n\nexport default MainContainer;\n","/*\n * Follow this format:\n * export const YOUR_ACTION_CONSTANT = 'yourproject/YourContainer/YOUR_ACTION_CONSTANT';\n */\n\nexport const SET_HAND_RANGE = \"handrangeAPI/MainPage/SET_HAND_RANGE\";\nexport const SET_HAND_RANGE_SELECT =\n  \"handrangeAPI/MainPage/SET_HAND_RANGE_SELECT\";\nexport const GET_HAND_RANGE = \"handrangeAPI/MainPage/GET_HAND_RANGE\";\nexport const SET_HAND_RANGE_FOLDER =\n  \"handrangeAPI/MainPage/SET_HAND_RANGE_FOLDER\";\nexport const SET_HAND_RANGE_GROUP =\n  \"handrangeAPI/MainPage/SET_HAND_RANGE_GROUP\";\nexport const EDIT_HAND_RANGE_FOLDER =\n  \"handrangeAPI/MainPage/EDIT_HAND_RANGE_FOLDER\";\nexport const GET_HAND_RANGE_FOLDER =\n  \"handrangeAPI/MainPage/GET_HAND_RANGE_FOLDER\";\nexport const CREATE_HAND_RANGE_FOLDER =\n  \"handrangeAPI/MainPage/CREATE_HAND_RANGE_FOLDER\";\nexport const SET_CLASS_COLOR = \"handrangeAPI/MainPage/SET_CLASS_COLOR\";\n","import React, { useState, useEffect, memo } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Grid, Button } from \"semantic-ui-react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { useDrag, useGesture, useMove } from \"react-use-gesture\";\nimport { useSpring, animated } from \"react-spring\";\n\nimport { setHandRange } from \"../actions.js\";\nimport styled from \"styled-components\";\n\nconst ColorCard = styled(animated.div)`\n  cursor: pointer;\n  padding-left: 0px;\n  padding-right: 2px;\n  width: 100% !important;\n  height: 20px !important;\n  margin: 0px;\n  font-size: 7px;\n  text-align: center;\n  color: white;\n  background-color: ${props => props.coloring};\n\n  @media (min-width: 576px) and (max-width: 767.98px) {\n    width: 20px;\n    padding: 0px;\n    font-size: 12px;\n  }\n  @media (min-width: 768px) and (max-width: 991.98px) {\n    width: 30px;\n    padding: 0px;\n    font-size: 12px;\n  }\n  @media (min-width: 992px) {\n    width: 30px;\n    padding: 0px;\n    font-size: 12px;\n  }\n`;\n\nconst StyledRow = styled(Row)`\n  margin: 0px;\n  width: 100%;\n  flex-wrap: nowrap !important;\n`;\n\nconst StyledCol = styled(Col)`\n  margin: 0px;\n  width: 100% !important;\n  height: 20px !important;\n  padding-left: 0px !important;\n  padding-right: 0px !important;\n  justify-content: flex-start;\n`;\nconst orderedCard = [\n  \"A\",\n  \"K\",\n  \"Q\",\n  \"J\",\n  \"T\",\n  \"9\",\n  \"8\",\n  \"7\",\n  \"6\",\n  \"5\",\n  \"4\",\n  \"3\",\n  \"2\"\n];\nconst displayCardSuit = (cardOne, cardTwo) => {\n  let displaySuit = \"\";\n  if (orderedCard.indexOf(cardOne) < orderedCard.indexOf(cardTwo)) {\n    displaySuit = \"s\";\n  } else if (cardOne === cardTwo) {\n    displaySuit = \"\";\n  } else {\n    displaySuit = \"o\";\n  }\n  return displaySuit;\n};\n\nlet getCards = (cardOne, cardTwo) => {\n  let card1 = \"\",\n    card2 = \"\";\n  if (orderedCard.indexOf(cardOne) < orderedCard.indexOf(cardTwo)) {\n    card1 = cardOne;\n    card2 = cardTwo;\n  } else if (cardOne === cardTwo) {\n    card1 = cardOne;\n    card2 = cardTwo;\n  } else {\n    card1 = cardTwo;\n    card2 = cardOne;\n  }\n  return card1 + card2;\n};\n\nconst Board = ({ onMouseOverHandler, ranges, rangeColors, mode }) => {\n  const [manyHands, setManyHands] = useState();\n  const [cards, setCards] = useState({});\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    let cardClone = {};\n\n    orderedCard.forEach(cardOne =>\n      orderedCard.forEach(cardTwo => {\n        let hands =\n          getCards(cardOne, cardTwo) + displayCardSuit(cardOne, cardTwo);\n        if (rangeColors) {\n          Object.keys(rangeColors).forEach(cardColors => {\n            if (\n              rangeColors[cardColors] &&\n              rangeColors[cardColors].indexOf(hands) >= 0\n            ) {\n              cardClone = {\n                ...cardClone,\n                [hands]: { colorCards: cardColors }\n              };\n            }\n          });\n        }\n      })\n    );\n\n    setCards(cardClone);\n  }, [rangeColors]);\n\n  // Set the drag hook and define component movement based on gesture data\n  const bind = useGesture({\n    onDrag: props =>\n      onMouseOverHandler(\n        {\n          cards: props.args[props.args.length - 1],\n          onMouseDownEvent:\n            (props.memo !== props.args[props.args.length - 1] && props.down) ||\n            (props.first && props.down)\n        },\n        { threshold: 40, filterTaps: false }\n      ),\n    onMove: props =>\n      onMouseOverHandler(\n        {\n          cards: props.args[props.args.length - 1],\n          onMouseDownEvent:\n            (props.memo !== props.args[0] && props.down) ||\n            (props.first && props.down)\n        },\n        { threshold: 40, delay: true }\n      )\n  });\n  useEffect(() => {\n    let toSetManyHands = [];\n\n    toSetManyHands = orderedCard.map(cardOne =>\n      orderedCard.reduce((acc, cardTwo, idx) => {\n        acc.push([cardOne, cardTwo]);\n        return acc;\n      }, [])\n    );\n    let setNewManyHands = toSetManyHands.map((row, idx) => {\n      let columnJSX = row.map(([cardOne, cardTwo]) => {\n        return (\n          <StyledCol xs={1} key={getCards(cardOne, cardTwo) + displayCardSuit(cardOne, cardTwo)}>\n            <ColorCard\n              {...bind(\n                getCards(cardOne, cardTwo) + displayCardSuit(cardOne, cardTwo)\n              )}\n              hand={\n                getCards(cardOne, cardTwo) + displayCardSuit(cardOne, cardTwo)\n              }\n              coloring={\n                cards[\n                  getCards(cardOne, cardTwo) + displayCardSuit(cardOne, cardTwo)\n                ]\n                  ? cards[\n                      [\n                        getCards(cardOne, cardTwo) +\n                          displayCardSuit(cardOne, cardTwo)\n                      ]\n                    ].colorCards\n                  : \"#AAA\"\n              }\n            >\n              {[getCards(cardOne, cardTwo), displayCardSuit(cardOne, cardTwo)]}\n            </ColorCard>\n          </StyledCol>\n        );\n      });\n      return <StyledRow xs={13}>{columnJSX}</StyledRow>;\n    });\n    setManyHands(setNewManyHands);\n  }, [rangeColors, cards, bind]);\n\n  return <Container fluid>{manyHands}</Container>;\n};\n\nexport default Board;\n","import React from 'react';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { Header, Table } from 'semantic-ui-react';\n\n\nconst StyledContainer = styled(Container)`\n    font-size: 1rem;\n`;\n\nconst StyledRedRow = styled(Table.Row)`\n    color: white;\n    background-color: red;\n`;\n\nconst StyledVioletRow = styled(Table.Row)`\n    color: white;\n    background-color: purple;\n`;\n\nconst StyledBlueRow = styled(Table.Row)`\n    color: white;\n    background-color: blue;\n`;\n\nconst StyledGreenRow = styled(Table.Row)`\n    color: white;\n    background-color: green;\n`;\n\nconst StyledInvertedRow = styled(Table.Header)`\n    color: white;\n    background-color: white;\n    color: black;\n`;\n\nconst BoardLegend = (props) => {\n    return (\n        <StyledContainer>\n            <Table>\n                <StyledInvertedRow>\n                    <Table.Row>\n                        <Table.HeaderCell>Name</Table.HeaderCell>\n                        <Table.HeaderCell>Range # Combos</Table.HeaderCell>\n                        <Table.HeaderCell>% of Range</Table.HeaderCell>\n                        <Table.HeaderCell>% of Hands</Table.HeaderCell>\n                    </Table.Row>\n                </StyledInvertedRow>\n                <Table.Body>\n                    <StyledRedRow>\n                        <Table.Cell>Raise/4bet/Call</Table.Cell>\n                        <Table.Cell>{props.range0Combos}</Table.Cell>\n                        <Table.Cell>{props.range0Percent}</Table.Cell>\n                        <Table.Cell>{props.range0PercentAll}</Table.Cell>\n                    </StyledRedRow>\n                    <StyledVioletRow>\n                        <Table.Cell>Raise/4bet/Fold</Table.Cell>\n                        <Table.Cell>{props.range1Combos}</Table.Cell>\n                        <Table.Cell>{props.range1Percent}</Table.Cell>\n                        <Table.Cell>{props.range1PercentAll}</Table.Cell>\n                    </StyledVioletRow>\n                    <StyledBlueRow>\n                        <Table.Cell>Raise/Call</Table.Cell>\n                        <Table.Cell>{props.range2Combos}</Table.Cell>\n                        <Table.Cell>{props.range2Percent}</Table.Cell>\n                        <Table.Cell>{props.range2PercentAll}</Table.Cell>\n                    </StyledBlueRow>\n                    <StyledGreenRow>\n                        <Table.Cell>Raise/Fold</Table.Cell>\n                        <Table.Cell>{props.range3Combos}</Table.Cell>\n                        <Table.Cell>{props.range3Percent}</Table.Cell>\n                        <Table.Cell>{props.range3PercentAll}</Table.Cell>\n                    </StyledGreenRow>\n                </Table.Body>\n            </Table>\n        </StyledContainer>\n    )\n}\n\nexport default BoardLegend;","import produce from \"immer\";\n\nimport {\n  GET_HAND_RANGE,\n  SET_HAND_RANGE,\n  SET_HAND_RANGE_FOLDER,\n  SET_HAND_RANGE_GROUP,\n  GET_HAND_RANGE_FOLDER,\n  CREATE_HAND_RANGE_FOLDER,\n  EDIT_HAND_RANGE_FOLDER,\n  SET_HAND_RANGE_SELECT,\n  SET_CLASS_COLOR,\n  SET_HAND_RANGE_VALUES\n} from \"./constants.js\";\n\nconst initialState = {\n  mode: {\n    street: \"\",\n    streetAction: \"\"\n  },\n  rangeColors: {\n    green: [],\n    blue: [],\n    purple: [],\n    red: []\n  },\n  ranges: {\n    Preflop: {\n      disabled: false,\n      Raise4BetCall: {\n        color: \"green\",\n        active: \"red\",\n        prHandString: [],\n        colorCard: \"green card-button\"\n      },\n      Raise4BetFold: {\n        color: \"blue\",\n        active: false,\n        prHandString: [],\n        colorCard: \"blue card-button\"\n      },\n      RaiseCall: {\n        color: \"purple\",\n        active: false,\n        prHandString: [],\n        colorCard: \"purple card-button\"\n      },\n      RaiseFold: {\n        color: \"red\",\n        active: false,\n        prHandString: [],\n        colorCard: \"red card-button\"\n      }\n    },\n    Flop: {\n      disabled: true,\n      Valuebet: {\n        color: \"green\",\n        prHandString: [],\n        colorCard: \"green card-button\"\n      },\n      Bluff: {\n        color: \"blue\",\n        prHandString: [],\n        colorCard: \"blue card-button\"\n      },\n      CheckCall: {\n        color: \"purple\",\n        prHandString: [],\n        colorCard: \"purple card-button\"\n      },\n      CheckFold: {\n        color: \"red\",\n        prHandString: [],\n        colorCard: \"red card-button\"\n      }\n    },\n    Turn: {\n      disabled: true,\n      Valuebet: {\n        color: \"green\",\n        prHandString: [],\n        colorCard: \"green card-button\"\n      },\n      Bluff: {\n        color: \"blue\",\n        prHandString: [],\n        colorCard: \"blue card-button\"\n      },\n      CheckCall: {\n        color: \"purple\",\n        prHandString: [],\n        colorCard: \"purple card-button\"\n      },\n      CheckFold: {\n        color: \"red\",\n        prHandString: [],\n        colorCard: \"red card-button\"\n      }\n    },\n    River: {\n      disabled: true,\n      Valuebet: {\n        color: \"green\",\n        prHandString: [],\n        colorCard: \"green card-button\"\n      },\n      Bluff: {\n        color: \"blue\",\n        prHandString: [],\n        colorCard: \"blue card-button\"\n      },\n      CheckCall: {\n        color: \"purple\",\n        prHandString: [],\n        colorCard: \"purple card-button\"\n      },\n      CheckFold: {\n        color: \"red\",\n        prHandString: [],\n        colorCard: \"red card-button\"\n      }\n    }\n  }\n};\nconst orderedCard = [\n  \"A\",\n  \"K\",\n  \"Q\",\n  \"J\",\n  \"T\",\n  \"9\",\n  \"8\",\n  \"7\",\n  \"6\",\n  \"5\",\n  \"4\",\n  \"3\",\n  \"2\"\n];\n\nconst mainPageReducer = (state = initialState, action) =>\n  produce(state, draft => {\n    switch (action.type) {\n      case SET_HAND_RANGE_SELECT:\n        console.log(action);\n\n        if (draft.mode.street != action.data.name) {\n          draft.rangeColors = {\n            green: [],\n            blue: [],\n            purple: [],\n            red: []\n          }; //reset range colors for new range\n          let newRangeColors = {};\n          Object.keys(draft.ranges[[action.data.name]]).forEach(\n            streetAction => {\n              console.log(streetAction);\n              newRangeColors = {\n                ...newRangeColors,\n                [draft.ranges[[action.data.name]][streetAction].color]:\n                  draft.ranges[[action.data.name]][streetAction].prHandString\n              };\n            }\n          );\n          draft.rangeColors = newRangeColors;\n        }\n        draft.mode.street = action.data.name;\n        draft.mode.streetAction = action.data.value;\n        break;\n      case SET_HAND_RANGE:\n        const rangesIndex = draft.ranges[[draft.mode.street]][\n          [draft.mode.streetAction]\n        ].prHandString.indexOf(action.data.cards);\n\n        if (rangesIndex >= 0)\n          draft.ranges[[draft.mode.street]][\n            [draft.mode.streetAction]\n          ].prHandString.splice(rangesIndex, 1);\n        else\n          draft.ranges[[draft.mode.street]][\n            [draft.mode.streetAction]\n          ].prHandString.push(action.data.cards);\n\n        const colorIndex = draft.rangeColors[\n          [draft.ranges[[draft.mode.street]][[draft.mode.streetAction]].color]\n        ].indexOf(action.data.cards);\n\n        if (colorIndex >= 0)\n          draft.rangeColors[\n            [draft.ranges[[draft.mode.street]][[draft.mode.streetAction]].color]\n          ].splice(colorIndex, 1);\n        else\n          draft.rangeColors[\n            [draft.ranges[[draft.mode.street]][[draft.mode.streetAction]].color]\n          ].push(action.data.cards);\n\n        break;\n      case SET_HAND_RANGE_FOLDER:\n        break;\n      case SET_HAND_RANGE_GROUP:\n        break;\n      case GET_HAND_RANGE_FOLDER:\n        break;\n      case CREATE_HAND_RANGE_FOLDER:\n        break;\n      case EDIT_HAND_RANGE_FOLDER:\n        break;\n\n      default:\n        break;\n    }\n  });\nexport default mainPageReducer;\nexport { initialState };\n","/**\n * The home state selectors\n */\n\nimport { createSelector } from \"reselect\";\n\nimport { initialState } from \"./reducer\";\n\nconst selectGlobal = state => state.global || initialState; //??\nconst selectRouter = state => state.router;\n\nconst makeSelectMode = () => {\n  return createSelector(selectGlobal, global => {\n    return global.mode;\n  });\n}; //??\nconst makeSelectRanges = () => {\n  return createSelector(selectGlobal, global => {\n    if (global && global.mode && global.mode.street && global.mode.streetAction)\n      return global.ranges[[global.mode.street]][[global.mode.streetAction]];\n    else return initialState.ranges.Preflop.Raise4BetCall;\n  });\n}; //??\n\nconst makeSelectRangeColors = () =>\n  createSelector(selectGlobal, globalState => globalState.rangeColors); //??\n\nexport {\n  selectGlobal,\n  selectRouter,\n  makeSelectRanges,\n  makeSelectMode,\n  makeSelectRangeColors\n};\n","import { conformsTo, isFunction, isObject } from \"lodash\";\nimport invariant from \"invariant\";\n\n/**\n * Validate the shape of redux store\n */\nexport default function checkStore(store) {\n  const shape = {\n    dispatch: isFunction,\n    subscribe: isFunction,\n    getState: isFunction,\n    replaceReducer: isFunction,\n    runSaga: isFunction,\n    injectedReducers: isObject,\n    injectedSagas: isObject\n  };\n  invariant(\n    conformsTo(store, shape),\n    \"(app/utils...) injectors: Expected a valid redux store\"\n  );\n}\n","import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\nexport default history;\n","/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nimport history from \"./utils/history\";\nimport globalReducer from \"./containers/MainPage/reducer\";\n\n/**\n * Merges the main reducer with the router state and dynamically injected reducers\n */\nexport default function createReducer(injectedReducers = {}) {\n  const rootReducer = combineReducers({\n    global: globalReducer,\n    router: connectRouter(history),\n    ...injectedReducers\n  });\n\n  return rootReducer;\n} //?\n","import invariant from \"invariant\";\nimport { isEmpty, isFunction, isString } from \"lodash\";\n\nimport checkStore from \"./checkStore\";\nimport createReducer from \"../reducers\";\n\nexport function injectReducerFactory(store, isValid) {\n  return function injectReducer(key, reducer) {\n    if (!isValid) checkStore(store);\n\n    invariant(\n      isString(key) && !isEmpty(key) && isFunction(reducer),\n      \"(app/utils...) injectReducer: Expected `reducer` to be a reducer function\"\n    );\n\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\n    if (\n      Reflect.has(store.injectedReducers, key) &&\n      store.injectedReducers[key] === reducer\n    )\n      return;\n\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\n    store.replaceReducer(createReducer(store.injectedReducers));\n  };\n}\n\nexport default function getInjectors(store) {\n  checkStore(store);\n\n  return {\n    injectReducer: injectReducerFactory(store, true)\n  };\n}\n","import React from \"react\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport { ReactReduxContext } from \"react-redux\";\n\nimport getInjectors from \"./reducerInjectors\";\n\n/**\n * Dynamically injects a reducer\n *\n * @param {string} key A key of the reducer\n * @param {function} reducer A reducer that will be injected\n *\n */\nexport default ({ key, reducer }) => WrappedComponent => {\n  class ReducerInjector extends React.Component {\n    static WrappedComponent = WrappedComponent;\n\n    static contextType = ReactReduxContext;\n\n    static displayName = `withReducer(${WrappedComponent.displayName ||\n      WrappedComponent.name ||\n      \"Component\"})`;\n\n    constructor(props, context) {\n      super(props, context);\n\n      getInjectors(context.store).injectReducer(key, reducer);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  return hoistNonReactStatics(ReducerInjector, WrappedComponent);\n};\n\nconst useInjectReducer = ({ key, reducer }) => {\n  const context = React.useContext(ReactReduxContext);\n  React.useEffect(() => {\n    getInjectors(context.store).injectReducer(key, reducer);\n  }, []);\n};\n\nexport { useInjectReducer };\n","import React, { Fragment } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport { Button, Menu, Segment } from \"semantic-ui-react\";\n\nconst StyledButton = styled(Button)`\n  &&& {\n    background-color: ${props => (props.active ? \"white !important\" : \"none\")};\n    color: ${props => (props.active ? \"black !important\" : \"black\")};\n    width: 150px;\n  }\n`;\n\nconst StreetSelector = ({ handleStreet, street }) => {\n  const Preflop = (\n    <Fragment>\n      <div>\n        <StyledButton\n          onClick={handleStreet}\n          name=\"Preflop\"\n          value=\"Raise4BetCall\"\n          color=\"green\"\n          disabled={street !== \"Preflop\"}\n        >\n          Raise/4bet/Call\n        </StyledButton>\n      </div>\n      <div>\n        <StyledButton\n          onClick={handleStreet}\n          name=\"Preflop\"\n          value=\"Raise4BetFold\"\n          color=\"blue\"\n          disabled={street !== \"Preflop\"}\n        >\n          Raise/4bet/fold\n        </StyledButton>\n      </div>\n      <div>\n        <StyledButton\n          onClick={handleStreet}\n          name=\"Preflop\"\n          value=\"RaiseCall\"\n          color=\"purple\"\n          disabled={street !== \"Preflop\"}\n        >\n          Raise/Call\n        </StyledButton>\n      </div>\n      <div>\n        <StyledButton\n          onClick={handleStreet}\n          name=\"Preflop\"\n          value=\"RaiseFold\"\n          color=\"red\"\n          disabled={street !== \"Preflop\"}\n        >\n          Raise/Fold\n        </StyledButton>\n      </div>\n    </Fragment>\n  );\n\n  const Flop = (\n    <Fragment>\n      <StyledButton\n        onClick={handleStreet}\n        name=\"Flop\"\n        value=\"Valuebet\"\n        color=\"green\"\n        disabled={street !== \"Flop\"}\n      >\n        Valuebet\n      </StyledButton>\n      <StyledButton\n        onClick={handleStreet}\n        name=\"Flop\"\n        value=\"Bluff\"\n        color=\"blue\"\n        disabled={street !== \"Flop\"}\n      >\n        bluff\n      </StyledButton>\n      <StyledButton\n        onClick={handleStreet}\n        name=\"Flop\"\n        value=\"CheckCall\"\n        color=\"purple\"\n        disabled={street !== \"Flop\"}\n      >\n        Check/Call\n      </StyledButton>\n      <StyledButton\n        onClick={handleStreet}\n        name=\"Flop\"\n        value=\"CheckFold\"\n        color=\"red\"\n        disabled={street !== \"Flop\"}\n      >\n        Check/Fold\n      </StyledButton>\n    </Fragment>\n  );\n  const Turn = (\n    <Fragment>\n      <StyledButton\n        onClick={handleStreet}\n        name=\"Turn\"\n        value=\"Valuebet\"\n        color=\"green\"\n        disabled={street !== \"Turn\"}\n      >\n        Valuebet\n      </StyledButton>\n      <StyledButton\n        onClick={handleStreet}\n        name=\"Turn\"\n        value=\"Bluff\"\n        color=\"blue\"\n        disabled={street !== \"Turn\"}\n      >\n        bluff\n      </StyledButton>\n      <StyledButton\n        onClick={handleStreet}\n        name=\"Turn\"\n        value=\"CheckCall\"\n        color=\"purple\"\n        disabled={street !== \"Turn\"}\n      >\n        Check/Call\n      </StyledButton>\n      <StyledButton\n        onClick={handleStreet}\n        name=\"Turn\"\n        value=\"CheckFold\"\n        color=\"red\"\n        disabled={street !== \"Turn\"}\n      >\n        Check/Fold\n      </StyledButton>\n    </Fragment>\n  );\n\n  const River = (\n    <Fragment>\n      <StyledButton\n        onClick={handleStreet}\n        name=\"River\"\n        value=\"Valuebet\"\n        color=\"green\"\n        disabled={street !== \"River\"}\n      >\n        Valuebet\n      </StyledButton>\n      <StyledButton\n        onClick={handleStreet}\n        name=\"River\"\n        value=\"Bluff\"\n        color=\"blue\"\n        disabled={street !== \"River\"}\n      >\n        bluff\n      </StyledButton>\n      <StyledButton\n        onClick={handleStreet}\n        name=\"River\"\n        value=\"CheckCall\"\n        color=\"purple\"\n        disabled={street !== \"River\"}\n      >\n        Check Turn Call\n      </StyledButton>\n      <StyledButton\n        onClick={handleStreet}\n        name=\"River\"\n        value=\"CheckFold\"\n        color=\"red\"\n        disabled={street !== \"River\"}\n      >\n        Check Turn Fold\n      </StyledButton>\n    </Fragment>\n  );\n  return (\n    <Fragment>\n      <Menu attached=\"top\" tabular>\n        <Menu.Item\n          onClick={handleStreet}\n          name=\"Preflop\"\n          value=\"Raise4BetCall\"\n          color=\"black\"\n        >\n          Preflop\n        </Menu.Item>\n        <Menu.Item\n          onClick={handleStreet}\n          name=\"Flop\"\n          value=\"Valuebet\"\n          color=\"black\"\n        >\n          Flop\n        </Menu.Item>\n        <Menu.Item\n          onClick={handleStreet}\n          name=\"Turn\"\n          value=\"Valuebet\"\n          color=\"black\"\n        >\n          Turn\n        </Menu.Item>\n        <Menu.Item\n          onClick={handleStreet}\n          name=\"River\"\n          value=\"Valuebet\"\n          color=\"black\"\n        >\n          River\n        </Menu.Item>\n      </Menu>\n      <Segment attached=\"bottom\">\n        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\" }}>\n          {street === \"Preflop\" ? Preflop : null}\n          {street === \"Flop\" ? Flop : null}\n          {street === \"Turn\" ? Turn : null}\n          {street === \"River\" ? River : null}\n        </div>\n      </Segment>\n    </Fragment>\n  );\n};\n\nexport default StreetSelector;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { Row, Col } from \"react-bootstrap\";\n\nconst cardBack = (\n  <img alt=\"first card\" style={{ height: 70 }} src={\"/assets/cards/back.png\"} />\n);\n\nconst BoardCards = ({ cardsFlipped }) => {\n  const [flippinCards, updateFlippinCards] = useState([]);\n\n  useEffect(() => {\n    if (cardsFlipped && cardsFlipped.indexOf(\",\") >= 0) {\n      let flippinCardsClone = cardsFlipped.split(\",\");\n      flippinCardsClone = flippinCardsClone.map(cards =>\n        cards.toUpperCase().trim()\n      );\n      updateFlippinCards(flippinCardsClone);\n    }\n  }, [cardsFlipped]);\n\n  return (\n    <Fragment>\n      <Row>\n        <Col md={6} lg={6}>\n          <h4>Flop</h4>\n          {Array.isArray(flippinCards) && flippinCards.length > 0 ? (\n            <img\n              alt=\"first card\"\n              style={{ height: 70 }}\n              src={\"/assets/cards/\" + flippinCards[0] + \".png\"}\n            />\n          ) : (\n            cardBack\n          )}\n          {Array.isArray(flippinCards) && flippinCards.length > 1 ? (\n            <img\n              alt=\"second card\"\n              style={{ height: 70 }}\n              src={\"/assets/cards/\" + flippinCards[1] + \".png\"}\n            />\n          ) : (\n            cardBack\n          )}\n          {Array.isArray(flippinCards) && flippinCards.length > 2 ? (\n            <img\n              alt=\"second card\"\n              style={{ height: 70 }}\n              src={\"/assets/cards/\" + flippinCards[2] + \".png\"}\n            />\n          ) : (\n            cardBack\n          )}\n        </Col>\n        <Col md={3} lg={3}>\n          <h4>Turn</h4>\n          {Array.isArray(flippinCards) && flippinCards.length > 3 ? (\n            <img\n              alt=\"second card\"\n              style={{ height: 70 }}\n              src={\"/assets/cards/\" + flippinCards[3] + \".png\"}\n            />\n          ) : (\n            cardBack\n          )}\n        </Col>\n        <Col md={3} lg={3}>\n          <h4>River</h4>\n          {Array.isArray(flippinCards) && flippinCards.length > 4 ? (\n            <img\n              alt=\"second card\"\n              style={{ height: 70 }}\n              src={\"/assets/cards/\" + flippinCards[4] + \".png\"}\n            />\n          ) : (\n            cardBack\n          )}\n        </Col>\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default BoardCards;\n","import React, { useState, useEffect, memo, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport MainContainer from \"../../components/MainContainer/index\";\nimport Board from \"./Board/index.js\";\nimport { Button, Select, Form } from \"semantic-ui-react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport prange from \"prange\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport BoardLegend from \"../../components/BoardLegend/BoardLegend\";\nimport {\n  selectGlobal,\n  makeSelectRanges,\n  makeSelectMode,\n  makeSelectRangeColors\n} from \"./selectors.js\";\nimport { getHandRange, setHandRangeSelect, setHandRange } from \"./actions.js\";\nimport reducer from \"./reducer.js\";\nimport { useInjectReducer } from \"../../HOC/useInjectReducer.js\";\nimport { initialState } from \"./reducer.js\";\nimport styled from \"styled-components\";\nimport StreetSelector from \"./StreetSelector\";\nimport BoardCards from \"./BoardCards\";\n\nconst key = \"global\";\n\nconst MainPage = ({ ranges, mode, rangeColors }) => {\n  useInjectReducer({ key, reducer });\n  const dispatch = useDispatch();\n  const [mouseDownState, updateMouseDownState] = useState(false);\n\n  const handleStreet = (e, data) => {\n    dispatch(setHandRangeSelect({ name: data.name, value: data.value }));\n  };\n\n  const onMouseOverHandler = data => {\n    if (data.onMouseDownEvent) dispatch(setHandRange({ cards: data.cards }));\n    return data.cards;\n  };\n\n  const [deadCards, updateDeadCards] = useState();\n\n  return (\n    <Container stackable={true}>\n      <Row>\n        <Col>\n          <Form>\n            <Col\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\"\n              }}\n            >\n              <Form.Input\n                label=\"Dead Cards\"\n                placeholder=\"Enter dead cards, for example Ah, As, 2c\"\n                style={{ width: 300 }}\n                name=\"deadcards\"\n                onChange={e => updateDeadCards(e.target.value)}\n              ></Form.Input>\n              <Form.Button type=\"submit\">Submit</Form.Button>\n            </Col>\n            <Col>\n              <BoardCards cardsFlipped={deadCards}></BoardCards>\n            </Col>\n            <Col>\n              <StreetSelector\n                handleStreet={handleStreet}\n                street={mode.street}\n              ></StreetSelector>\n            </Col>\n            <Col>\n              <Button label=\"assign\"></Button>\n              <Button label=\"Ranges\"></Button>\n            </Col>\n            <Col>\n              <Button label=\"Clear Selection\"></Button>\n              <Button label=\"Clear Suits\"></Button>\n              <Button label=\"Split Suits\"></Button>\n            </Col>\n          </Form>\n        </Col>\n        <Col>\n          <Board\n            onMouseOverHandler={onMouseOverHandler}\n            rangeColors={rangeColors}\n          ></Board>\n          {/* <Col><BoardLegend range0Combos={raise4BetCallCombos} range1Combos={raise4BetFoldCombos} range2Combos={raiseCallCombos} \n                                  range3Combos={raiseFoldCombos} range0Percent={raise4BetCallPercent}\n                                  range1Percent={raise4BetFoldPercent} range2Percent={raiseCallPercent}\n                                  range3Percent={raiseFoldPercent} range0PercentAll={raise4BetCallPercentAll}\n                                  range1PercentAll={raise4BetFoldPercentAll} range2PercentAll={raiseCallPercentAll}\n                                  range3PercentAll={raiseFoldPercentAll}></BoardLegend></Col> */}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\nMainPage.propTypes = {\n  ranges: PropTypes.object,\n  mode: PropTypes.object,\n  rangeColors: PropTypes.object\n};\n\nconst mapStateToProps = () => {\n  const getMapRange = makeSelectRanges();\n  const getRangeColors = makeSelectRangeColors();\n  const mapState = state => {\n    return {\n      ranges: getMapRange(state),\n      rangeColors: getRangeColors(state)\n    };\n  };\n  return mapState;\n}; //?\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     dispatchToHandRange: (data) => dispatch(setHandRange(data))\n//   };\n// };\nconst withConnect = connect(mapStateToProps, null);\n\nexport default compose(withConnect, memo)(MainPage);\n","import {\n  SET_HAND_RANGE,\n  GET_HAND_RANGE,\n  SET_HAND_RANGE_FOLDER,\n  CREATE_HAND_RANGE_FOLDER,\n  SET_HAND_RANGE_GROUP,\n  EDIT_HAND_RANGE_FOLDER,\n  SET_HAND_RANGE_SELECT\n} from \"./constants\";\n\nexport function setHandRangeSelect(data) {\n  return {\n    type: SET_HAND_RANGE_SELECT,\n    data\n  };\n}\n\nexport function setHandRange(data) {\n  return {\n    type: SET_HAND_RANGE,\n    data\n  };\n}\n\nexport function getHandRange(data) {\n  return {\n    type: GET_HAND_RANGE,\n    data\n  };\n}\n\nexport function setHandRangeFolder(hrfObj) {\n  return {\n    type: SET_HAND_RANGE_FOLDER,\n    payload: hrfObj\n  };\n}\n\nexport function createHandRangeFolder(hrfObj) {\n  return {\n    type: CREATE_HAND_RANGE_FOLDER,\n    hrfObj\n  };\n}\nexport function editHandRangeFolder(hrfObj) {\n  return {\n    type: EDIT_HAND_RANGE_FOLDER,\n    hrfObj\n  };\n}\nexport function setHandRangeGroup(hrgObj) {\n  return {\n    type: SET_HAND_RANGE_GROUP,\n    hrgObj\n  };\n}\n\n// API CONSTANTS\n\nconst BASE_URL = \"http://localhost:3001\";\nconst HAND_RANGE_USER_URL = BASE_URL + \"/hand_ranges/show_user_id/\";\nconst HAND_RANGE_FOLDER_URL = BASE_URL + \"/hand_range_folders/\";\nconst HAND_RANGE_GROUP_URL = BASE_URL + \"/hand_range_groups/\";\n\n// Redux Actions\n\nconst addHRAction = hrObj => ({\n  type: \"SET_HAND_RANGE\",\n  payload: hrObj\n});\nconst getHRAction = () => ({\n  type: \"GET_HAND_RANGES\"\n});\n\nconst addHRFAction = hrfObj => ({\n  type: \"SET_HAND_RANGE_FOLDER\",\n  payload: hrfObj\n});\nconst createHRFAction = hrfObj => ({\n  type: \"CREATE_HAND_RANGE_FOLDER\",\n  payload: hrfObj\n});\nconst addHRGAction = hrfObj => ({\n  type: \"SET_HAND_RANGE_GROUP\",\n  payload: hrfObj\n});\n\nconst editHRFAction = hrfObj => ({\n  type: \"EDIT_HAND_RANGE_FOLDER\",\n  payload: hrfObj\n});\n\nconst editHRF = hrFolderName => dispatch => {\n  const config = {\n    method: \"PATCH\",\n    folderName: hrFolderName,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      hand_range_folders: {\n        FolderName: hrFolderName,\n        user_id: 1,\n        id: 1\n      }\n    })\n  };\n  fetch(HAND_RANGE_FOLDER_URL + \"1\", config)\n    .then(r => r.json())\n    .then(data => {\n      console.log(data);\n      dispatch(editHRFAction(data));\n    });\n};\n\nconst createHRF = hrFolderName => dispatch => {\n  const config = {\n    method: \"POST\",\n    folderName: hrFolderName,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      FolderName: hrFolderName,\n      user_id: 1\n    })\n  };\n  fetch(HAND_RANGE_FOLDER_URL, config)\n    .then(r => r.json())\n    .then(data => {\n      console.log(data);\n      dispatch(createHRFAction(data));\n    });\n};\n\nconst newHRFToDB = hrUserID => dispatch => {\n  const config = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  console.log(hrUserID);\n  fetch(HAND_RANGE_FOLDER_URL, config)\n    .then(r => r.json())\n    .then(data => {\n      console.log(data);\n      dispatch(addHRFAction(data));\n    });\n};\n\nconst newHRGToDB = hrUserID => dispatch => {\n  const config = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  fetch(HAND_RANGE_GROUP_URL, config)\n    .then(r => r.json())\n    .then(data => {\n      console.log(data);\n      dispatch(addHRGAction(data));\n    });\n};\n\nconst newHRToDB = hrUserID => dispatch => {\n  const config = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  console.log(hrUserID);\n  fetch(HAND_RANGE_USER_URL + hrUserID, config)\n    .then(r => r.json())\n    .then(data => {\n      console.log(data);\n      dispatch(addHRAction(data));\n    });\n};\n\nexport default {\n  addHRAction,\n  newHRToDB,\n  getHRAction,\n  newHRFToDB,\n  newHRGToDB,\n  createHRF,\n  editHRF\n};\n","// API CONSTANTS\n\nconst BASE_URL = 'http://localhost:3001';\nconst USERS_URL = BASE_URL + '/users';\nconst PERSIST_URL = BASE_URL + '/persist';\nconst LOGIN_URL = BASE_URL + '/login';\nconst SPECIFIC_USER_URL = id => USERS_URL + '/' + id;\n\n// Redux Actions\n\nconst setUserAction = userObj => ({\n  type: 'SET_USER',\n  payload: userObj\n});\n\nconst clearUserAction = () => ({\n  type: 'CLEAR_USER'\n});\n\n// Fetch\n\nconst returnUserObj = () => ({\n    type: 'default'\n});\n\nconst newUserToDB = userObj => dispatch => {\n  const config = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userObj)\n  };\n  fetch(USERS_URL, config)\n    .then(r => r.json())\n    .then(data => {\n      dispatch(setUserAction(data.user));\n      localStorage.setItem('token', data.token);\n    });\n};\n\nconst deleteUserFromDB = userId => dispatch => {\n  const config = {\n    method: 'DELETE'\n  };\n  fetch(SPECIFIC_USER_URL(userId), config).then(r => {\n    dispatch(clearUserAction());\n    localStorage.clear();\n  });\n};\n\nconst loginUserToDB = userCredentials => dispatch => {\n  const config = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userCredentials)\n  };\n  fetch(LOGIN_URL, config)\n    .then(r => r.json())\n    .then(data => {\n      dispatch(setUserAction(data.user));\n      console.log(data.user.id);\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user_id', data.user.id);\n    });\n};\n\n\nconst saveHandRangeToDB = (props) => dispatch => {\n\n    let currentToken = localStorage.getItem('token');\n    console.log(\"Current token:\");\n    console.log(currentToken);\n\n    // const config = {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   },\n    //   body: JSON.stringify(userCredentials)\n    // };\n    // fetch(LOGIN_URL, config)\n    //   .then(r => r.json())\n    //   .then(data => {\n    //     dispatch(setUserAction(data.user));\n    //     localStorage.setItem('token', data.token);\n    //   });\n  };\n\nconst persistUser = () => dispatch => {\n  const config = {\n    method: 'GET',\n    headers: {\n      Authorization: `bearer ` + localStorage.token\n    }\n  };\n  fetch(PERSIST_URL, config)\n    .then(r => r.json())\n    .then(userInstance => {\n      dispatch(setUserAction(userInstance));\n    });\n};\n\nconst logoutUser = () => dispatch => {\n  dispatch(clearUserAction());\n  localStorage.clear();\n};\n\nexport default {\n  newUserToDB,\n  deleteUserFromDB,\n  loginUserToDB,\n  persistUser,\n  logoutUser,\n  saveHandRangeToDB,\n  returnUserObj\n};","import React, { useEffect, useState, useRef, Fragment, memo } from \"react\";\nimport \"./App.css\";\nimport MainPage from \"../MainPage/index\";\n// import { useStripe } from \"../../HOC/useStripe/useStripe\";\n// import { StripeProvider, Elements } from \"react-stripe-elements\";\nimport { BrowserRouter, Route, NavLink, Switch } from \"react-router-dom\";\nimport { Menu } from \"semantic-ui-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport userActions from \"../../reducers/actions.js\";\nimport { useInjectReducer } from \"../../HOC/useInjectReducer\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport {\n  makeSelectRanges,\n  makeSelectRangeColors,\n  makeSelectMode\n} from \"../MainPage/selectors\";\n\nimport reducer from \"../MainPage/reducer\";\n\nconst key = \"global\";\n\nconst App = ({ ranges, mode, rangeColors }) => {\n  useInjectReducer({ key, reducer });\n  // const [stripe, setStripe] = useState(null);\n  const username = useSelector(state => state.user);\n  // useEffect(() => {\n  //   if (window.Stripe) {\n  //     setStripe(window.Stripe(\"pk_test_3QHFTQccclvodS2QXldeAkSh00qBGSooM3\"));\n  //   } else {\n  //     document.querySelector(\"#stripe-js\").addEventListener(\"load\", function() {\n  //       setStripe(window.Stripe(\"pk_test_3QHFTQccclvodS2QXldeAkSh00qBGSooM3\"));\n  //     });\n  //   }\n\n  //   // const token = localStorage.getItem(\"token\");\n  //   // if (token) {\n  //   //   fetch(`http://localhost:3001/auto_login`, {\n  //   //     headers: {\n  //   //       Authorization: `Bearer ${token}`\n  //   //     }\n  //   //   })\n  //   //   .then(resp => resp.json())\n  //   //   .then(data =>{\n  //   //     console.log(data);\n  //   //   });\n  //   // }\n  // }, []);\n\n  // const handleAuthClick = () => {\n  //   const token = localStorage.getItem(\"token\");\n  //   fetch(`http://localhost:3001/auto_login`, {\n  //     headers: {\n  //       Authorization: `Bearer ${token}`\n  //     }\n  //   })\n  //     .then(resp => resp.json())\n  //     .then(data => {\n  //       console.log(data);\n  //     });\n  // };\n\n  const dispatch = useDispatch();\n  const handleLogout = () => {\n    dispatch(userActions.logoutUser());\n  };\n\n  return (\n    <Fragment>\n      <Menu inverted>\n        <Menu.Item>\n          <NavLink to=\"/\">Home</NavLink>\n        </Menu.Item>\n        {username ? (\n          <>\n            <Menu.Item>{username}</Menu.Item>\n            <Menu.Item>\n              <NavLink to=\"/donate\">Donate</NavLink>\n            </Menu.Item>\n            <Menu.Item>\n              <NavLink to=\"/\" onClick={handleLogout}>\n                Logout\n              </NavLink>\n            </Menu.Item>\n          </>\n        ) : (\n          <>\n            <Menu.Item>\n              <NavLink to=\"/register\">Register</NavLink>\n            </Menu.Item>\n            <Menu.Item>\n              <NavLink to=\"/login\">Login</NavLink>\n            </Menu.Item>\n          </>\n        )}\n      </Menu>\n      <MainPage\n        ranges={ranges}\n        mode={mode}\n        rangeColors={rangeColors}\n      ></MainPage>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  ranges: makeSelectRanges(),\n  mode: makeSelectMode(),\n  rangeColors: makeSelectRangeColors()\n}); //?\n\nconst withConnect = connect(mapStateToProps, null);\n\nexport default compose(withConnect, memo)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (error) {\n    return undefined;\n  }\n};\n\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (error) {\n    // Ignore write errors\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport handRangesAvailable from \"./reducers/HandRanges\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport throttle from \"lodash/throttle\";\nimport history from \"./utils/history\";\nimport { saveState } from \"./localStorage\";\nimport configureStore from \"./configureStore\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { ThemeProvider } from \"styled-components\";\nimport { initialState } from \"./containers/MainPage/reducer.js\";\n\n//const store = createStore(combineReducers({rootReducer, handRangesAvailable}), applyMiddleware(thunk));\n// Create redux store with history\n//const initialState = {};\nconst store = configureStore(initialState, history);\n\nstore.subscribe(\n  throttle(() => {\n    const { global } = store.getState();\n    saveState({ global });\n  }, 1000)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <ThemeProvider theme={{ main: \"mediumseagreen\" }}>\n        <Switch>\n          <Route path=\"/\" component={App} />\n        </Switch>\n      </ThemeProvider>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/**\n * Create the store with dynamic reducers\n */\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport createReducer from \"./reducers\";\nimport { loadState } from \"./localStorage\";\nimport initialStates from \"./containers/MainPage/reducer.js\";\n\nexport default function configureStore(initialState = initialStates, history) {\n  let composeEnhancers = compose;\n  const reduxSagaMonitorOptions = {};\n\n  // If Redux Dev Tools and Saga Dev Tools Extensions are installed, enable them\n  /* istanbul ignore next */\n  if (process.env.NODE_ENV !== \"production\" && typeof window === \"object\") {\n    /* eslint-disable no-underscore-dangle */\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__)\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({});\n\n    // NOTE: Uncomment the code below to restore support for Redux Saga\n    // Dev Tools once it supports redux-saga version 1.x.x\n    // if (window.__SAGA_MONITOR_EXTENSION__)\n    //   reduxSagaMonitorOptions = {\n    //     sagaMonitor: window.__SAGA_MONITOR_EXTENSION__,\n    //   };\n    // /* eslint-enable */\n  }\n\n  const sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions);\n\n  const middlewares = [sagaMiddleware, routerMiddleware(history)];\n\n  const enhancers = [applyMiddleware(...middlewares)];\n\n  const persistedState = loadState();\n\n  const store = createStore(\n    createReducer(),\n    // initialState,\n    persistedState,\n    composeEnhancers(...enhancers)\n  );\n\n  // Extensions\n  store.runSaga = sagaMiddleware.run;\n  store.injectedReducers = {}; // Reducer registry\n  store.injectedSagas = {}; // Saga registry\n\n  // Make reducers hot reloadable, see http://mxs.is/googmo\n  /* istanbul ignore next */\n  if (module.hot) {\n    module.hot.accept(\"./reducers\", () => {\n      store.replaceReducer(createReducer(store.injectedReducers));\n    });\n  }\n\n  return store;\n}\n"],"sourceRoot":""}