{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/PersonalProjects/RangeSharingReactRubyAPI/frontend/src/containers/MainPage/index.js\";\nimport React, { useState } from 'react';\nimport MainContainer from '../../components/MainContainer/index';\nimport Board from '../../components/board/board';\nimport Range from '../Range/index';\nimport { Button } from 'semantic-ui-react';\nexport const MainPage = ({\n  loading,\n  error\n}) => {\n  const initBettingOptions = [{\n    key: 'raise4betCall',\n    value: 'raise4betCall',\n    text: 'Raise/4bet/Call'\n  }, {\n    key: 'raise4betFold',\n    value: 'raise4betFold',\n    text: 'Raise/4bet/Fold'\n  }, {\n    key: 'raiseCall',\n    value: 'raiseCall',\n    text: 'Raise/Call'\n  }, {\n    key: 'raiseFold',\n    value: 'raiseFold',\n    text: 'Raise/Fold'\n  }, {\n    key: 'Fold',\n    value: 'Fold',\n    text: 'Fold'\n  }];\n  const [raise4betCall, setRaise4betCall] = useState([]);\n  const [raise4betFold, setRaise4betFold] = useState([]);\n  const [raiseCall, setRaiseCall] = useState([]);\n  const [raiseFold, setRaiseFold] = useState([]);\n  const [bettingOptions, setBettingOptions] = useState(initBettingOptions.key);\n\n  const onRaise4BetCallHandler = e => {\n    setRaise4betCall(raise4betCall.map((key, value) => {\n      return key;\n    }));\n  };\n\n  const onRaise4BetFoldHandler = e => {\n    setRaise4betFold(raise4betFold.map((key, value) => {\n      return key;\n    }));\n  };\n\n  const onRaiseCallHandler = e => {\n    setRaiseCall(raiseCall.map((key, value) => {\n      return key;\n    }));\n  };\n\n  const onRaiseFoldHandler = e => {\n    setRaiseFold(raiseFold.map((key, value) => {\n      return key;\n    }));\n  };\n\n  const bettingOptionsHandler = e => {\n    if (e.target.textContent === \"Raise/4bet/Call\") {\n      setBettingOptions(initBettingOptions[0].key);\n    } else if (e.target.textContent === \"Raise/4bet/Fold\") {\n      setBettingOptions(initBettingOptions[1].key);\n    } else if (e.target.textContent === \"Raise/Call\") {\n      setBettingOptions(initBettingOptions[2].key);\n    } else if (e.target.textContent === \"Raise/Fold\") {\n      setBettingOptions(initBettingOptions[3].key);\n    } else if (e.target.textContent === \"Fold\") {\n      setBettingOptions(initBettingOptions[4].key);\n    }\n  };\n\n  const checkBettingOption = (action, getHandHandler, setHandHandler, handTested) => {\n    console.log(bettingOptions);\n\n    if (bettingOptions === action) {\n      if (getHandHandler.includes(handTested)) {\n        console.log(\"remove\");\n        let filteredHandRange = getHandHandler.filter(function (hand) {\n          return hand !== handTested;\n        });\n        setHandHandler(filteredHandRange);\n      } else {\n        setHandHandler([...getHandHandler, handTested]);\n      }\n    }\n  };\n\n  const onHandClickHandler = e => {\n    checkBettingOption(\"raise4betCall\", raise4betCall, setRaise4betCall, e.target.name);\n    checkBettingOption(\"raise4betFold\", raise4betFold, setRaise4betFold, e.target.name);\n    checkBettingOption(\"raiseCall\", raiseCall, setRaiseCall, e.target.name);\n    checkBettingOption(\"raiseFold\", raiseFold, setRaiseFold, e.target.name);\n  };\n\n  const checkClassColor = (hand, getHandHandler, color) => {\n    if (getHandHandler.includes(hand)) {\n      return \"ui \" + color + \" button\";\n    }\n  };\n\n  const classColorHandler = (cardOne, cardTwo, suit) => {\n    let classColorValue = \"\";\n    classColorValue = classColorValue + checkClassColor(cardOne + cardTwo + suit, raise4betCall, \"red\");\n    classColorValue = classColorValue + checkClassColor(cardOne + cardTwo + suit, raise4betFold, \"violet\");\n    classColorValue = classColorValue + checkClassColor(cardOne + cardTwo + suit, raiseCall, \"blue\");\n    classColorValue = classColorValue + checkClassColor(cardOne + cardTwo + suit, raiseFold, \"green\");\n    return classColorValue;\n  };\n\n  const saveToServerHandler = () => {};\n\n  return React.createElement(MainContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Board, {\n    onHandClick: onHandClickHandler,\n    classColor: classColorHandler,\n    optionsState: bettingOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(Range, {\n    bettingOptions: initBettingOptions,\n    onChangeHandler: bettingOptionsHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Raise 4bet Call Range: \", React.createElement(\"span\", {\n    onChange: onRaise4BetCallHandler.bind(this),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, raise4betCall)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Raise 4bet Fold Range: \", React.createElement(\"span\", {\n    onChange: onRaise4BetFoldHandler.bind(this),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, raise4betFold)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Raise Call Range: \", React.createElement(\"span\", {\n    onChange: onRaiseCallHandler.bind(this),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, raiseCall)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Raise Fold Range: \", React.createElement(\"span\", {\n    onChange: onRaiseFoldHandler.bind(this),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, raiseFold)), React.createElement(Button, {\n    onClick: saveToServerHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Save Range To Server\"));\n};\nexport default MainPage;","map":{"version":3,"sources":["/Users/admin/Documents/PersonalProjects/RangeSharingReactRubyAPI/frontend/src/containers/MainPage/index.js"],"names":["React","useState","MainContainer","Board","Range","Button","MainPage","loading","error","initBettingOptions","key","value","text","raise4betCall","setRaise4betCall","raise4betFold","setRaise4betFold","raiseCall","setRaiseCall","raiseFold","setRaiseFold","bettingOptions","setBettingOptions","onRaise4BetCallHandler","e","map","onRaise4BetFoldHandler","onRaiseCallHandler","onRaiseFoldHandler","bettingOptionsHandler","target","textContent","checkBettingOption","action","getHandHandler","setHandHandler","handTested","console","log","includes","filteredHandRange","filter","hand","onHandClickHandler","name","checkClassColor","color","classColorHandler","cardOne","cardTwo","suit","classColorValue","saveToServerHandler","bind"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport MainContainer from '../../components/MainContainer/index';\nimport Board from '../../components/board/board';\nimport Range from '../Range/index';\nimport {Button } from 'semantic-ui-react';\n\nexport const MainPage = ({loading, error}) => {\n\n    const initBettingOptions = [\n        {key: 'raise4betCall', value: 'raise4betCall', text: 'Raise/4bet/Call'},\n        {key: 'raise4betFold', value: 'raise4betFold', text: 'Raise/4bet/Fold'},\n        {key: 'raiseCall', value: 'raiseCall', text: 'Raise/Call'},\n        {key: 'raiseFold', value: 'raiseFold', text: 'Raise/Fold'},\n        {key: 'Fold', value: 'Fold', text: 'Fold'}\n    ]\n\n    const [raise4betCall, setRaise4betCall] = useState([]);\n    const [raise4betFold, setRaise4betFold] = useState([]);\n    const [raiseCall, setRaiseCall] = useState([]);\n    const [raiseFold, setRaiseFold] = useState([]);\n\n    const [bettingOptions, setBettingOptions] = useState(initBettingOptions.key);\n\n    const onRaise4BetCallHandler = (e) => {\n        setRaise4betCall(raise4betCall.map((key, value) => {return key;}));\n    };\n\n    const onRaise4BetFoldHandler = (e) => {\n        setRaise4betFold(raise4betFold.map((key, value) => {return key;}));\n    };\n\n    const onRaiseCallHandler = (e) => {\n        setRaiseCall(raiseCall.map((key, value) => {return key;}));\n    };\n\n    const onRaiseFoldHandler = (e) => {\n        setRaiseFold(raiseFold.map((key, value) => {return key;}));\n    };\n\n    const bettingOptionsHandler = (e) => {\n        if(e.target.textContent === \"Raise/4bet/Call\")\n        {\n            setBettingOptions(initBettingOptions[0].key);\n        }\n        else if(e.target.textContent === \"Raise/4bet/Fold\")\n        {\n            setBettingOptions(initBettingOptions[1].key);\n        }\n        else if(e.target.textContent === \"Raise/Call\")\n        {\n            setBettingOptions(initBettingOptions[2].key);\n        }\n        else if(e.target.textContent === \"Raise/Fold\")\n        {\n            setBettingOptions(initBettingOptions[3].key);\n        }\n        else if(e.target.textContent === \"Fold\")\n        {\n            setBettingOptions(initBettingOptions[4].key);\n        }\n    };\n\n    const checkBettingOption = (action, getHandHandler, setHandHandler, handTested) => {\n        console.log(bettingOptions);\n        if(bettingOptions === action)\n        {\n            if(getHandHandler.includes(handTested))\n            {\n                console.log(\"remove\");\n                let filteredHandRange = getHandHandler.filter(function(hand){ return hand !== handTested});\n\n                setHandHandler(filteredHandRange);\n            }\n            else\n            {\n                setHandHandler([...getHandHandler, handTested]);\n            }        \n        }\n    }\n\n    const onHandClickHandler = (e) => {\n        checkBettingOption(\"raise4betCall\", raise4betCall, setRaise4betCall, e.target.name); \n        checkBettingOption(\"raise4betFold\", raise4betFold, setRaise4betFold, e.target.name); \n        checkBettingOption(\"raiseCall\", raiseCall, setRaiseCall, e.target.name); \n        checkBettingOption(\"raiseFold\", raiseFold, setRaiseFold, e.target.name); \n    };\n\n    const checkClassColor = (hand, getHandHandler, color) => {\n        if(getHandHandler.includes(hand))\n        {\n            return \"ui \" + color + \" button\";\n        }\n        \n    }\n\n    const classColorHandler = (cardOne, cardTwo, suit) => {\n        let classColorValue = \"\";\n        classColorValue = classColorValue + checkClassColor(cardOne + cardTwo + suit, raise4betCall, \"red\");\n        classColorValue = classColorValue + checkClassColor(cardOne + cardTwo + suit, raise4betFold, \"violet\");\n        classColorValue = classColorValue + checkClassColor(cardOne + cardTwo + suit, raiseCall, \"blue\");\n        classColorValue = classColorValue + checkClassColor(cardOne + cardTwo + suit, raiseFold, \"green\");\n        return classColorValue;\n    };\n\n    const saveToServerHandler = () => {\n\n    };\n\n    return (\n        <MainContainer>\n            <Board onHandClick={onHandClickHandler} classColor={classColorHandler} optionsState={bettingOptions}></Board>\n            <Range bettingOptions={initBettingOptions} onChangeHandler={bettingOptionsHandler}></Range><br></br>\n            <div>Raise 4bet Call Range: <span onChange={onRaise4BetCallHandler.bind(this)}>{raise4betCall}</span></div>\n            <div>Raise 4bet Fold Range: <span onChange={onRaise4BetFoldHandler.bind(this)}>{raise4betFold}</span></div>\n            <div>Raise Call Range: <span onChange={onRaiseCallHandler.bind(this)}>{raiseCall}</span></div>\n            <div>Raise Fold Range: <span onChange={onRaiseFoldHandler.bind(this)}>{raiseFold}</span></div>\n            <Button onClick={saveToServerHandler}>Save Range To Server</Button>\n        </MainContainer>\n    );\n};\n\nexport default MainPage;"]},"metadata":{},"sourceType":"module"}