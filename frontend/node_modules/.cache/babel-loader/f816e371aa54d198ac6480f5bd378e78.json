{"ast":null,"code":"// hooks/UseDataApi.js\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nconst url = \"http://localhost:3001\";\n\nconst useRequest1 = props => {\n  // This is just for demo purposes, you probably want to separate the data from loading state and potentially add other states such as failures, etc..\n  const [dataState, setDataState] = useState({\n    data: [],\n    isFetching: false\n  });\n  const [endpointUrl] = useState(url);\n  useEffect(() => {\n    const fetchDataFromApi = async () => {\n      try {\n        setDataState({ ...dataState,\n          isFetching: true\n        });\n        console.log(props);\n        const response = await axios.Post(endpointUrl, {\n          params: props\n        });\n        setDataState({ ...dataState,\n          data: response,\n          isFetching: false\n        });\n      } catch (e) {\n        console.log(e);\n        setDataState({ ...dataState,\n          isFetching: false\n        });\n      }\n    };\n\n    fetchDataFromApi();\n  }, []); // Runs once\n\n  return [dataState];\n};\n\nexport default useRequest1;","map":{"version":3,"sources":["/Users/admin/Documents/PersonalProjects/RangeSharingReactRubyAPI/frontend/src/HOC/API/useRequest1.js"],"names":["useEffect","useState","axios","url","useRequest1","props","dataState","setDataState","data","isFetching","endpointUrl","fetchDataFromApi","console","log","response","Post","params","e"],"mappings":"AACA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,uBAAZ;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,UAAU,EAAE;AAAxB,GAAD,CAA1C;AACA,QAAM,CAACC,WAAD,IAAgBT,QAAQ,CAACE,GAAD,CAA9B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,gBAAgB,GAAG,YAAY;AACnC,UAAI;AACFJ,QAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBG,UAAAA,UAAU,EAAE;AAA5B,SAAD,CAAZ;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,cAAMS,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAN,CAAWL,WAAX,EAAwB;AAACM,UAAAA,MAAM,EAAEX;AAAT,SAAxB,CAAvB;AACAE,QAAAA,YAAY,CAAC,EACX,GAAGD,SADQ;AAEXE,UAAAA,IAAI,EAAEM,QAFK;AAGXL,UAAAA,UAAU,EAAE;AAHD,SAAD,CAAZ;AAKD,OATD,CASE,OAAOQ,CAAP,EAAU;AACVL,QAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACAV,QAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBG,UAAAA,UAAU,EAAE;AAA5B,SAAD,CAAZ;AACD;AACF,KAdD;;AAeAE,IAAAA,gBAAgB;AACjB,GAjBQ,EAiBN,EAjBM,CAAT,CAL6B,CAsBrB;;AAER,SAAO,CAACL,SAAD,CAAP;AACD,CAzBD;;AA2BA,eAAeF,WAAf","sourcesContent":["\n// hooks/UseDataApi.js\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst url = \"http://localhost:3001\";\n\nconst useRequest1 = (props) => {\n  // This is just for demo purposes, you probably want to separate the data from loading state and potentially add other states such as failures, etc..\n  const [dataState, setDataState] = useState({ data: [], isFetching: false }); \n  const [endpointUrl] = useState(url);\n\n  useEffect(() => {\n    const fetchDataFromApi = async () => {\n      try {\n        setDataState({ ...dataState, isFetching: true });\n        console.log(props);\n        const response = await axios.Post(endpointUrl, {params: props});\n        setDataState({\n          ...dataState,\n          data: response,\n          isFetching: false\n        });\n      } catch (e) {\n        console.log(e);\n        setDataState({ ...dataState, isFetching: false });\n      }\n    };\n    fetchDataFromApi();\n  }, []); // Runs once\n\n  return [dataState];\n};\n\nexport default useRequest1;"]},"metadata":{},"sourceType":"module"}