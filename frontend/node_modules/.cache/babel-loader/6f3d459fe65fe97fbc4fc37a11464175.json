{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/PersonalProjects/RangeSharingReactRubyAPI/frontend/src/components/board/board.js\";\nimport React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport Hand from '../hand/hand';\n\nfunction Board(props) {\n  const orderedCard = [\"A\", \"K\", \"Q\", \"J\", \"T\", \"9\", \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\"];\n\n  const displayCard = (indexCardOne, indexCardTwo, cardOne, cardTwo) => {\n    let display;\n\n    if (indexCardOne < indexCardTwo) {\n      display = React.createElement(Hand, {\n        key: cardOne + cardTwo,\n        cardOne: cardOne,\n        cardTwo: cardTwo,\n        suit: \"s\",\n        handOnClick: props.onHandClick,\n        classColor: props.classColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      });\n    } else if (indexCardOne === indexCardTwo) {\n      display = React.createElement(Hand, {\n        key: cardOne + cardTwo,\n        cardOne: cardOne,\n        cardTwo: cardTwo,\n        suit: \"\",\n        handOnClick: props.onHandClick,\n        classColor: props.classColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      });\n    } else {\n      display = React.createElement(Hand, {\n        key: cardOne + cardTwo,\n        cardOne: cardTwo,\n        cardTwo: cardOne,\n        suit: \"o\",\n        handOnClick: props.onHandClick,\n        classColor: props.classColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n    }\n\n    return display;\n  };\n\n  return React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    columns: 13,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, orderedCard.map((cardOne, indexCardOne) => orderedCard.map((cardTwo, indexCardTwo) => displayCard(indexCardOne, indexCardTwo, cardOne, cardTwo)))));\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/admin/Documents/PersonalProjects/RangeSharingReactRubyAPI/frontend/src/components/board/board.js"],"names":["React","Grid","Hand","Board","props","orderedCard","displayCard","indexCardOne","indexCardTwo","cardOne","cardTwo","display","onHandClick","classColor","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,QAAMC,WAAW,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,CAApB;;AAEA,QAAMC,WAAW,GAAG,CAACC,YAAD,EAAeC,YAAf,EAA6BC,OAA7B,EAAsCC,OAAtC,KAAkD;AAClE,QAAIC,OAAJ;;AAEA,QAAGJ,YAAY,GAAGC,YAAlB,EACA;AACIG,MAAAA,OAAO,GAAG,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEF,OAAO,GAAGC,OAArB;AAA8B,QAAA,OAAO,EAAED,OAAvC;AAAgD,QAAA,OAAO,EAAEC,OAAzD;AAAkE,QAAA,IAAI,EAAE,GAAxE;AAA6E,QAAA,WAAW,EAAEN,KAAK,CAACQ,WAAhG;AAA6G,QAAA,UAAU,EAAER,KAAK,CAACS,UAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACH,KAHD,MAIK,IAAIN,YAAY,KAAKC,YAArB,EACL;AACIG,MAAAA,OAAO,GAAG,oBAAC,IAAD;AAAO,QAAA,GAAG,EAAEF,OAAO,GAAGC,OAAtB;AAA+B,QAAA,OAAO,EAAED,OAAxC;AAAiD,QAAA,OAAO,EAAEC,OAA1D;AAAmE,QAAA,IAAI,EAAE,EAAzE;AAA6E,QAAA,WAAW,EAAEN,KAAK,CAACQ,WAAhG;AAA6G,QAAA,UAAU,EAAER,KAAK,CAACS,UAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACH,KAHI,MAKL;AACIF,MAAAA,OAAO,GAAG,oBAAC,IAAD;AAAO,QAAA,GAAG,EAAEF,OAAO,GAAGC,OAAtB;AAA+B,QAAA,OAAO,EAAEA,OAAxC;AAAiD,QAAA,OAAO,EAAED,OAA1D;AAAmE,QAAA,IAAI,EAAE,GAAzE;AAA8E,QAAA,WAAW,EAAEL,KAAK,CAACQ,WAAjG;AAA8G,QAAA,UAAU,EAAER,KAAK,CAACS,UAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACH;;AAED,WAAOF,OAAP;AACH,GAjBD;;AAmBA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,OAAO,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,WAAW,CAACS,GAAZ,CAAgB,CAACL,OAAD,EAAUF,YAAV,KACbF,WAAW,CAACS,GAAZ,CAAgB,CAACJ,OAAD,EAAUF,YAAV,KACZF,WAAW,CAACC,YAAD,EAAeC,YAAf,EAA6BC,OAA7B,EAAsCC,OAAtC,CADf,CADH,CADL,CADJ,CADJ;AAWH;;AAED,eAAeP,KAAf","sourcesContent":["import React from 'react';\nimport {Grid } from 'semantic-ui-react';\nimport Hand from '../hand/hand';\n\nfunction Board(props) {\n    const orderedCard = [\"A\", \"K\", \"Q\", \"J\", \"T\", \"9\", \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\"];\n    \n    const displayCard = (indexCardOne, indexCardTwo, cardOne, cardTwo) => {\n        let display;\n        \n        if(indexCardOne < indexCardTwo) \n        {\n            display = <Hand key={cardOne + cardTwo} cardOne={cardOne} cardTwo={cardTwo} suit={\"s\"} handOnClick={props.onHandClick} classColor={props.classColor}></Hand>;\n        }\n        else if (indexCardOne === indexCardTwo)\n        {\n            display = <Hand  key={cardOne + cardTwo} cardOne={cardOne} cardTwo={cardTwo} suit={\"\"} handOnClick={props.onHandClick} classColor={props.classColor}></Hand>;\n        }\n        else\n        {\n            display = <Hand  key={cardOne + cardTwo} cardOne={cardTwo} cardTwo={cardOne} suit={\"o\"} handOnClick={props.onHandClick} classColor={props.classColor}></Hand>;\n        }\n\n        return display;\n    };\n\n    return (\n        <Grid>\n            <Grid.Row columns={13}>\n                {orderedCard.map((cardOne, indexCardOne) => \n                    orderedCard.map((cardTwo, indexCardTwo) =>  \n                        displayCard(indexCardOne, indexCardTwo, cardOne, cardTwo)\n                    )\n                )}\n            </Grid.Row>\n        </Grid>\n    );\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}