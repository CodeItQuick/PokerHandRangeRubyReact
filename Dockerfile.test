# pull official base image
FROM tiangolo/node-frontend:10 as build-stage

# set working directory
WORKDIR /frontend

# add `/app/node_modules/.bin` to $PATH
ENV PATH /frontend/node_modules/.bin:$PATH

# install app dependencies
COPY frontend/package.json ./
COPY frontend/package-lock.json ./
RUN npm install

# add app
COPY frontend/ ./

# start app
RUN npm run build


#The ruby backend API
FROM rubylang/ruby:2.6.3-bionic AS ruby-stage

RUN apt-get update && \
    apt-get install -y nodejs \
    vim \
    mysql-client \
    libmysqlclient-dev \
    --no-install-recommends && \
    rm -rf /var/lib/apt/lists/*

#Cache bundle install
WORKDIR /tmp
ADD ./backend/Gemfile Gemfile
ADD ./backend/Gemfile.lock Gemfile.lock
RUN bundle install

ENV APP_ROOT /workspace
RUN mkdir -p $APP_ROOT
WORKDIR $APP_ROOT
COPY . $APP_ROOT

#EXPOSE  3000
#CMD rm -f tmp/pids/server.pid && rails s -b '0.0.0.0' -p 3000

# Stage 1, based on Nginx, to have only the compiled app, ready for production with Nginx
FROM nginx:1.15
COPY --from=build-stage /frontend/build/ /usr/share/nginx/html
# Copy the default nginx.conf provided by tiangolo/node-frontend
#COPY --from=build-stage /nginx.conf /etc/nginx/conf.d/default.conf

COPY default.conf /etc/nginx/conf.d/default.conf
COPY nginx.conf /etc/nginx/nginx.conf

COPY --from=ruby-stage /usr/local/bundle/ /usr/local/bundle/

RUN mkdir -p /app
WORKDIR /app
COPY --from=ruby-build-stage /workspace .

CMD bundle exec puma -C config/puma.rb

FROM phusion/passenger-full